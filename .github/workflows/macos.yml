name: Build and Release MacOS Version

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: 'true'
          
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%dT%H-%M-%S')"

      - name: Get Short SHA
        id: short_sha
        run: echo "::set-output name=short_sha::$(echo $GITHUB_SHA | cut -c1-7)"

      - name: Create tag
        uses: actions/github-script@v5
        with:
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'refs/tags/${{ steps.date.outputs.date }}',
              sha: context.sha
            })
          
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'  # 替换为你的 Python 版本
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Setup NodeJS
        uses: actions/setup-node@v4.0.2
        with:
          node-version: '20.14.0'

      - name: Build Frontend
        run: |
          cd frontend
          npm i
          npm run build
          cd ..
          
      - name: Build EXE
        run: |
          pyinstaller main.spec
          
      # - name: Tree File Structure
      #   id: tree
      #   run: tree /F
      - name: Copy Data Dirs
        run: |
          cp -r data dist/main

      - name: Zip Files
        uses: vimtor/action-zip@v1.2
        with:
          files: dist/main
          dest: blivechat-macos.zip
    
      - name: Upload EXE to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: blivechat-macos.zip  # 假设生成的EXE文件在dist目录下
          tag_name: ${{ steps.date.outputs.date }}
          name: ${{ steps.vars.outputs.sha_short }}

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
